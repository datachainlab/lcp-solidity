// SPDX-License-Identifier: Apache-2.0
pragma solidity ^0.8.12;

import "./TestHelper.t.sol";
import "../contracts/LCPCommitment.sol";
import "@hyperledger-labs/yui-ibc-solidity/contracts/proto/Client.sol";

contract LCPCommitmentTest is BasicTest {
    function setUp() public {}

    function testTrustingPeriodContext() public {
        // OK
        LCPCommitmentTestHelper.trustingPeriodContextEval(
            LCPCommitment.TrustingPeriodContext(1692489600000000000, 1692489600000000000, 1, 1), 1692489600000000000
        );

        vm.expectRevert(bytes("out of trusting period"));
        LCPCommitmentTestHelper.trustingPeriodContextEval(
            LCPCommitment.TrustingPeriodContext(1692489599999999999, 1692489599999999998, 1, 0), 1692489600000000000
        );

        vm.expectRevert(bytes("out of trusting period"));
        LCPCommitmentTestHelper.trustingPeriodContextEval(
            LCPCommitment.TrustingPeriodContext(1692489599999999999, 1692489599999999998, 2, 0), 1692489600000000000
        );

        // OK
        LCPCommitmentTestHelper.trustingPeriodContextEval(
            LCPCommitment.TrustingPeriodContext(1692489599999999999, 1692489599999999998, 3, 0), 1692489600000000000
        );

        vm.expectRevert(bytes("header is from the future"));
        LCPCommitmentTestHelper.trustingPeriodContextEval(
            LCPCommitment.TrustingPeriodContext(1692489600000000001, 1692489600000000000, 1, 0), 1692489600000000000
        );

        vm.expectRevert(bytes("header is from the future"));
        LCPCommitmentTestHelper.trustingPeriodContextEval(
            LCPCommitment.TrustingPeriodContext(1692489600000000001, 1692489600000000000, 1, 1), 1692489600000000000
        );

        // OK
        LCPCommitmentTestHelper.trustingPeriodContextEval(
            LCPCommitment.TrustingPeriodContext(1692489600000000001, 1692489600000000000, 1, 2), 1692489600000000000
        );
    }

    struct UpdateStateProxyMessageTestCase {
        bytes message;
        LCPCommitment.UpdateStateProxyMessage expected;
        LCPCommitment.TrustingPeriodContext expectedContext;
    }

    struct UpdateStateProxyMessageEmptyValidationContextTestCase {
        bytes message;
        LCPCommitment.UpdateStateProxyMessage expected;
    }

    struct VerifyMembershipTestCase {
        bytes message;
        LCPCommitment.VerifyMembershipProxyMessage expected;
    }

    struct MisbehaviourTestCase {
        bytes message;
        LCPCommitment.MisbehaviourProxyMessage expected;
    }

    function newEmittedStates(LCPCommitment.EmittedState memory state0)
        internal
        pure
        returns (LCPCommitment.EmittedState[] memory)
    {
        LCPCommitment.EmittedState[] memory states = new LCPCommitment.EmittedState[](1);
        states[0] = state0;
        return states;
    }

    function newEmittedStates(LCPCommitment.EmittedState memory state0, LCPCommitment.EmittedState memory state1)
        internal
        pure
        returns (LCPCommitment.EmittedState[] memory)
    {
        LCPCommitment.EmittedState[] memory states = new LCPCommitment.EmittedState[](2);
        states[0] = state0;
        states[1] = state1;
        return states;
    }

    function newPrevStates(LCPCommitment.PrevState memory state0)
        internal
        pure
        returns (LCPCommitment.PrevState[] memory)
    {
        LCPCommitment.PrevState[] memory states = new LCPCommitment.PrevState[](1);
        states[0] = state0;
        return states;
    }

    function newPrevStates(LCPCommitment.PrevState memory state0, LCPCommitment.PrevState memory state1)
        internal
        pure
        returns (LCPCommitment.PrevState[] memory)
    {
        LCPCommitment.PrevState[] memory states = new LCPCommitment.PrevState[](2);
        states[0] = state0;
        states[1] = state1;
        return states;
    }

    function testParseUpdateStateProxyMessageEmptyValidationContext() public {
        UpdateStateProxyMessageEmptyValidationContextTestCase[4] memory testCases = [
            UpdateStateProxyMessageEmptyValidationContextTestCase({
                message: hex"00000000000000000000000000000000000000000000000000000000000000200001000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000003a0000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000067b0e037cda278c80000000000000000000000000000000000000000000000004651ca7f6311e621d0a10c3f3049a8e0e07a7b807c752caadcb305e9c9a7862257123241fdd0c19e0000000000000000000000000000000000000000000000000ab9b9a4b16fc7d00000000000000000000000000000000000000000000000009d2879e21f2e217d4f884a011dacee2461e3146fa51b8c46548b8648b447b05b74ce12e2b54856a400000000000000000000000000000000000000000000000a81695c7d21d22dd5000000000000000000000000000000000000000000000000000000000000012000000000000000000000000000000000000000000000000000000000000001cea4427dff183dd5d00000000000000000000000000000000000000000000000065a86a13a8cbcc7b0000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000002d0a022f3c12271e943305a67471b71e45dbb0ad0cbf5ce7fa3742147b981d2552268cf8bad64a597e96bd9109ce00000000000000000000000000000000000000000000000000000000000000000000000000000000000000bdec13318ceca0a20000000000000000000000000000000000000000000000001890c5548d9f48c6000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000130a032f7b5c120cd76f2c912996f2be19b7170a00000000000000000000000000",
                expected: LCPCommitment.UpdateStateProxyMessage({
                    prevHeight: Height.Data({revision_number: 7471718312085453000, revision_height: 5067053704240293409}),
                    prevStateId: hex"d0a10c3f3049a8e0e07a7b807c752caadcb305e9c9a7862257123241fdd0c19e",
                    postHeight: Height.Data({revision_number: 772852928073418704, revision_height: 11324435275115798909}),
                    postStateId: hex"4f884a011dacee2461e3146fa51b8c46548b8648b447b05b74ce12e2b54856a4",
                    timestamp: 193792526933050928597,
                    context: hex"0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000",
                    emittedStates: newEmittedStates(
                        LCPCommitment.EmittedState({
                            height: Height.Data({revision_number: 16880661146074602845, revision_height: 7325221426586963067}),
                            state: hex"0a022f3c12271e943305a67471b71e45dbb0ad0cbf5ce7fa3742147b981d2552268cf8bad64a597e96bd9109ce"
                        }),
                        LCPCommitment.EmittedState({
                            height: Height.Data({revision_number: 13685334471210737826, revision_height: 1770131620500555974}),
                            state: hex"0a032f7b5c120cd76f2c912996f2be19b7170a"
                        })
                        )
                })
            }),
            UpdateStateProxyMessageEmptyValidationContextTestCase({
                message: hex"00000000000000000000000000000000000000000000000000000000000000200001000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000fa5b74c01e3d94fd000000000000000000000000000000000000000000000000575c216cde5b5ec3b7d6dde5f7d3505b7a15d5a8681d114417a47cd87ea993af4d7c7ab755b970be000000000000000000000000000000000000000000000000ad333f96e1c5eace0000000000000000000000000000000000000000000000006b1539192dfbe043b7d0e292bc7246b3f9e7be85b0267c95f3ae2cf57158ae18cda8adbbdac40a820000000000000000000000000000000000000000000000075bd1ae54943174a7000000000000000000000000000000000000000000000000000000000000012000000000000000000000000000000000000000000000000000000000000001c0000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
                expected: LCPCommitment.UpdateStateProxyMessage({
                    prevHeight: Height.Data({revision_number: 18040141100852548861, revision_height: 6294943130627825347}),
                    prevStateId: hex"b7d6dde5f7d3505b7a15d5a8681d114417a47cd87ea993af4d7c7ab755b970be",
                    postHeight: Height.Data({revision_number: 12480388909639264974, revision_height: 7716136316877660227}),
                    postStateId: hex"b7d0e292bc7246b3f9e7be85b0267c95f3ae2cf57158ae18cda8adbbdac40a82",
                    timestamp: 135743469521837585575,
                    context: hex"0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000",
                    emittedStates: new LCPCommitment.EmittedState[](0)
                })
            }),
            UpdateStateProxyMessageEmptyValidationContextTestCase({
                message: hexa6275c842b6c48e70000000000000000000000000000000000000000000000004f78209508eb2b1acc386a28ae699b295bc77594ca4203643cd165136ea14a17cd33bf165dd67ad9000000000000000000000000000000000000000000000006262eb7d762a4bdb1000000000000000000000000000000000000000000000000000000000000012000000000000000000000000000000000000000000000000000000000000001c0000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
                expected: LCPCommitment.UpdateStateProxyMessage({
                    prevHeight: Height.Data({revision_number: 0, revision_height: 0}),
                    prevStateId: hex"",
                    postHeight: Height.Data({revision_number: 11972639857121708263, revision_height: 5726362750673431322}),
                    postStateId: hex"cc386a28ae699b295bc77594ca4203643cd165136ea14a17cd33bf165dd67ad9",
                    timestamp: 113431803000328076721,
                    context: hex"0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000",
                    emittedStates: new LCPCommitment.EmittedState[](0)
                })
            }),
            UpdateStateProxyMessageEmptyValidationContextTestCase({
                message: hexfd08aa72e843a590000000000000000000000000000000000000000000000005a25f952e337dcd041fda32067936b2927f6cad5b40e665864582f850be03e4310875d2847d36c7800000000000000000000000000000000000000000000000bcd0ea89902f7ca02000000000000000000000000000000000000000000000000000000000000012000000000000000000000000000000000000000000000000000000000000001c000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000007b0a67fc4563b5c000000000000000000000000000000000000000000000000041035bdc3aa52734000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000460a1e2fe1af8d5ae0bb9ee2b6bee3839a7c2ef09e80a0d4b422d1a838f09d92b71224296d0e9a1af96c6abd94776c6a6712a26248ec9ce799e2ea840e022a4ee0628f97a1c0370000000000000000000000000000000000000000000000000000",
                expected: LCPCommitment.UpdateStateProxyMessage({
                    prevHeight: Height.Data({revision_number: 0, revision_height: 0}),
                    prevStateId: hex"",
                    postHeight: Height.Data({revision_number: 11515856697830947417, revision_height: 6495872171946532048}),
                    postStateId: hex"41fda32067936b2927f6cad5b40e665864582f850be03e4310875d2847d36c78",
                    timestamp: 217690117613387500034,
                    context: hex"0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000",
                    emittedStates: newEmittedStates(
                        LCPCommitment.EmittedState({
                            height: Height.Data({revision_number: 8866013149625824704, revision_height: 4684689038830282548}),
                            state: hex"0a1e2fe1af8d5ae0bb9ee2b6bee3839a7c2ef09e80a0d4b422d1a838f09d92b71224296d0e9a1af96c6abd94776c6a6712a26248ec9ce799e2ea840e022a4ee0628f97a1c037"
                        })
                        )
                })
            })
        ];

        for (uint256 i = 0; i < testCases.length; i++) {
            UpdateStateProxyMessageEmptyValidationContextTestCase memory testCase = testCases[i];
            LCPCommitment.UpdateStateProxyMessage memory c =
                LCPCommitmentTestHelper.parseUpdateStateProxyMessage(testCase.message);
            assertEq(c.prevHeight.revision_number, testCase.expected.prevHeight.revision_number);
            assertEq(c.prevHeight.revision_height, testCase.expected.prevHeight.revision_height);
            assertEq(c.postHeight.revision_number, testCase.expected.postHeight.revision_number);
            assertEq(c.postHeight.revision_height, testCase.expected.postHeight.revision_height);
            assertEq(c.prevStateId, testCase.expected.prevStateId);
            assertEq(c.postStateId, testCase.expected.postStateId);
            assertEq(c.emittedStates.length, testCase.expected.emittedStates.length);
            for (uint256 j = 0; j < c.emittedStates.length; j++) {
                assertEq(
                    c.emittedStates[j].height.revision_number, testCase.expected.emittedStates[j].height.revision_number
                );
                assertEq(
                    c.emittedStates[j].height.revision_height, testCase.expected.emittedStates[j].height.revision_height
                );
                assertEq(c.emittedStates[j].state, testCase.expected.emittedStates[j].state);
            }
            assertEq(c.timestamp, testCase.expected.timestamp);
            assertEq(c.context, testCase.expected.context);
            LCPCommitment.ValidationContext memory vc = LCPCommitment.parseValidationContext(c.context);
            assertEq(LCPCommitment.extractContextType(vc.header), LCPCommitment.LCP_MESSAGE_CONTEXT_TYPE_EMPTY);
            assertEq(vc.context, hex"");
        }
    }

    function testParseUpdateStateProxyMessage() public {
        UpdateStateProxyMessageTestCase[3] memory testCases = [
            UpdateStateProxyMessageTestCase({
                message: hex"000000000000000000000000000000000000000000000000000000000000002000010001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000044000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000004090fdd0ca3e0eb9000000000000000000000000000000000000000000000000df1958a9cc04111e1b5e4732bdee70e04def956f68cee2c7cffcbe0870f853804979e55e71ec3aae0000000000000000000000000000000000000000000000009f5c1346a9dd88d3000000000000000000000000000000000000000000000000d26e396c5a8b2d3ddc1073eba43d65416b961a6de442c3da52c61c9581b994a4f58461170662aa1b00000000000000000000000000000000000000000000000c208854f193591edc0000000000000000000000000000000000000000000000000000000000000120000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000002000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000004000000000000000090f5ab26a4fcdc94a000000000000000ce757fbd9e96fcef10000000000000009b0d69d0e41bab4020000000000000008f94e5863f94279060000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000001200000000000000000000000000000000000000000000000004419605f51a4ad57000000000000000000000000000000000000000000000000efebe0311ae88f2a000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000580a332fc8ba2649f0918db3e0a88527226054f09eb98b2522efbfbd25e0aa867c3d257be18c857a2e2ec2a57a633ed1a8f09eb9aa3f122182ca682e16420e54c96433eec466080977ae58556da7e8af4bd20815e34e59c02d000000000000000000000000000000000000000000000000000000000000000017904440df37f20900000000000000000000000000000000000000000000000006a6cf85a6bd513d000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000560a2f2f47e0bb9c2f2e79e0b781c392f090a8b468f09d95823f323625e1a4a7f0938ba65b22f0919994f09184b4e18a812e1223eefc5d8d58f25e045711ca55500d03de3c797f8143d44bf988ec4a93a58a32f7ae4ffa00000000000000000000",
                expected: LCPCommitment.UpdateStateProxyMessage({
                    prevHeight: Height.Data({revision_number: 4652497488261811897, revision_height: 16075977831171232030}),
                    prevStateId: hex"1b5e4732bdee70e04def956f68cee2c7cffcbe0870f853804979e55e71ec3aae",
                    postHeight: Height.Data({revision_number: 11483074344106428627, revision_height: 15163120132941360445}),
                    postStateId: hex"dc1073eba43d65416b961a6de442c3da52c61c9581b994a4f58461170662aa1b",
                    timestamp: 223705145887096905436,
                    context: hex"000000000000000000000000000000000000000000000000000000000000002000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000004000000000000000090f5ab26a4fcdc94a000000000000000ce757fbd9e96fcef10000000000000009b0d69d0e41bab4020000000000000008f94e5863f9427906",
                    emittedStates: newEmittedStates(
                        LCPCommitment.EmittedState({
                            height: Height.Data({revision_number: 4907059231504772439, revision_height: 17288158096101248810}),
                            state: hex"0a332fc8ba2649f0918db3e0a88527226054f09eb98b2522efbfbd25e0aa867c3d257be18c857a2e2ec2a57a633ed1a8f09eb9aa3f122182ca682e16420e54c96433eec466080977ae58556da7e8af4bd20815e34e59c02d"
                        }),
                        LCPCommitment.EmittedState({
                            height: Height.Data({revision_number: 1697932104932258313, revision_height: 479298583296561469}),
                            state: hex"0a2f2f47e0bb9c2f2e79e0b781c392f090a8b468f09d95823f323625e1a4a7f0938ba65b22f0919994f09184b4e18a812e1223eefc5d8d58f25e045711ca55500d03de3c797f8143d44bf988ec4a93a58a32f7ae4ffa"
                        })
                        )
                }),
                expectedContext: LCPCommitment.TrustingPeriodContext({
                    untrustedHeaderTimestamp: 167127089491534006602,
                    trustedStateTimestamp: 238030998343592693489,
                    trustingPeriod: 178763241543635219458,
                    clockDrift: 165538345739710789894
                })
            }),
            UpdateStateProxyMessageTestCase({
                message: hexbfaa63f8afa5df10000000000000000000000000000000000000000000000002a914fa13a7a77fca462046aba58dd0f4c027e19ff7e01dbf14c3c49b5e7ca3f89cc43a82b45b905000000000000000000000000000000000000000000000004ea2d50b808a1e21e0000000000000000000000000000000000000000000000000000000000000120000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000020000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000040000000000000000735f323780dd284a2000000000000000b7f979d86bfc596920000000000000003fe77683601221cd00000000000000004f63378c8a5b81b9b00000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000a832ce0cac87f322000000000000000000000000000000000000000000000000021087da67d04676000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000310a212ff0908da2f0909e84f09eb99d3f2aeaa0b0eaada4f09b8b84262cf09f95b42f3a120c66b0afcb5ad607c8580152fe000000000000000000000000000000",
                expected: LCPCommitment.UpdateStateProxyMessage({
                    prevHeight: Height.Data({revision_number: 0, revision_height: 0}),
                    prevStateId: hex"",
                    postHeight: Height.Data({revision_number: 4321949584260226545, revision_height: 3067320375105452028}),
                    postStateId: hex"a462046aba58dd0f4c027e19ff7e01dbf14c3c49b5e7ca3f89cc43a82b45b905",
                    timestamp: 90661208425014354462,
                    context: hex"0000000000000000000000000000000000000000000000000000000000000020000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000040000000000000000735f323780dd284a2000000000000000b7f979d86bfc596920000000000000003fe77683601221cd00000000000000004f63378c8a5b81b9b",
                    emittedStates: newEmittedStates(
                        LCPCommitment.EmittedState({
                            height: Height.Data({revision_number: 12119976101036946210, revision_height: 148768159817549430}),
                            state: hex"0a212ff0908da2f0909e84f09eb99d3f2aeaa0b0eaada4f09b8b84262cf09f95b42f3a120c66b0afcb5ad607c8580152fe"
                        })
                        )
                }),
                expectedContext: LCPCommitment.TrustingPeriodContext({
                    untrustedHeaderTimestamp: 133014698417852679330,
                    trustedStateTimestamp: 212108175177173800594,
                    trustingPeriod: 73676471210147454160,
                    clockDrift: 91527632455149820827
                })
            }),
            UpdateStateProxyMessageTestCase({
                message: hex"000000000000000000000000000000000000000000000000000000000000002000010001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000024000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000003918bd21b56924cc00000000000000000000000000000000000000000000000006f305fbc0d529338a9241e427b7cb1e8b36fbea2966c997312a03454a7797a5b8f7c21eb209f89c000000000000000000000000000000000000000000000000f34b7de0109d346d000000000000000000000000000000000000000000000000dff2df5b98e26a3c8752aa8d409857ae59d9a31c758d84caa02c399e1d3fe75822630d9b050b0a6f00000000000000000000000000000000000000000000000241dd744735adcb5c0000000000000000000000000000000000000000000000000000000000000120000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000200001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000400000000000000003c1fe9c60d3476f31000000000000000a84e72c57a9b65aa1000000000000000d26448a353d746ba1000000000000000b9f4521393b2a43030000000000000000000000000000000000000000000000000000000000000000",
                expected: LCPCommitment.UpdateStateProxyMessage({
                    prevHeight: Height.Data({revision_number: 4114246212078085324, revision_height: 500750562398382387}),
                    prevStateId: hex"8a9241e427b7cb1e8b36fbea2966c997312a03454a7797a5b8f7c21eb209f89c",
                    postHeight: Height.Data({revision_number: 17531244375774671981, revision_height: 16137205999321901628}),
                    postStateId: hex"8752aa8d409857ae59d9a31c758d84caa02c399e1d3fe75822630d9b050b0a6f",
                    timestamp: 41639565578929556316,
                    context: hex"00000000000000000000000000000000000000000000000000000000000000200001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000400000000000000003c1fe9c60d3476f31000000000000000a84e72c57a9b65aa1000000000000000d26448a353d746ba1000000000000000b9f4521393b2a4303",
                    emittedStates: new LCPCommitment.EmittedState[](0)
                }),
                expectedContext: LCPCommitment.TrustingPeriodContext({
                    untrustedHeaderTimestamp: 69319014454208720689,
                    trustedStateTimestamp: 194044112624743242401,
                    trustingPeriod: 242565153791350696865,
                    clockDrift: 214390800565918122755
                })
            })
        ];

        for (uint256 i = 0; i < testCases.length; i++) {
            UpdateStateProxyMessageTestCase memory testCase = testCases[i];
            LCPCommitment.UpdateStateProxyMessage memory c =
                LCPCommitmentTestHelper.parseUpdateStateProxyMessage(testCase.message);
            assertEq(c.prevHeight.revision_number, testCase.expected.prevHeight.revision_number);
            assertEq(c.prevHeight.revision_height, testCase.expected.prevHeight.revision_height);
            assertEq(c.postHeight.revision_number, testCase.expected.postHeight.revision_number);
            assertEq(c.postHeight.revision_height, testCase.expected.postHeight.revision_height);
            assertEq(c.prevStateId, testCase.expected.prevStateId);
            assertEq(c.postStateId, testCase.expected.postStateId);
            assertEq(c.emittedStates.length, testCase.expected.emittedStates.length);
            for (uint256 j = 0; j < c.emittedStates.length; j++) {
                assertEq(
                    c.emittedStates[j].height.revision_number, testCase.expected.emittedStates[j].height.revision_number
                );
                assertEq(
                    c.emittedStates[j].height.revision_height, testCase.expected.emittedStates[j].height.revision_height
                );
                assertEq(c.emittedStates[j].state, testCase.expected.emittedStates[j].state);
            }
            assertEq(c.timestamp, testCase.expected.timestamp);
            assertEq(c.context, testCase.expected.context);
            LCPCommitment.ValidationContext memory vc = LCPCommitment.parseValidationContext(c.context);
            assertEq(
                LCPCommitment.extractContextType(vc.header), LCPCommitment.LCP_MESSAGE_CONTEXT_TYPE_TRUSTING_PERIOD
            );
            LCPCommitment.TrustingPeriodContext memory tpc = LCPCommitment.parseTrustingPeriodContext(vc.context);
            assertEq(tpc.untrustedHeaderTimestamp, testCase.expectedContext.untrustedHeaderTimestamp);
            assertEq(tpc.trustedStateTimestamp, testCase.expectedContext.trustedStateTimestamp);
            assertEq(tpc.trustingPeriod, testCase.expectedContext.trustingPeriod);
            assertEq(tpc.clockDrift, testCase.expectedContext.clockDrift);
        }
    }

    function testVerifyMembershipProxyMessage() public {
        VerifyMembershipTestCase[3] memory testCases = [
            VerifyMembershipTestCase({
                message: hex"00000000000000000000000000000000000000000000000000000000000000200001000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000001c0000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000140546b4ac900b71d90630ebd854bf9b4b3081054787817c34edbe248c019d3d5220000000000000000000000000000000000000000000000002a77ef56df161a90000000000000000000000000000000000000000000000000dc8a051df742c6a8ed80bee27e34a0880b2197ab1094fe480d5069a1bd49c0a1edde5f8ac47ae0db000000000000000000000000000000000000000000000000000000000000005bff2001b8eb31136f2313c03bd375ee5a22cf7aa7eb2a8e94f7c32fe2e65300adc61fdb67069228cb78ab9bc66b17e85addc35863ba43738af2b6576491ed523016dbc229b37a5ef5f15de1d6a2d8927c97ddb1a42ba999f5e29e020000000000000000000000000000000000000000000000000000000000000000000000002e68f091b5a43bd1a841f091b590f096ad974fc2a52ff09291b0c2a5e2bfb9427bf3a08492e18dac2fe18ab3c2a53c000000000000000000000000000000000000",
                expected: LCPCommitment.VerifyMembershipProxyMessage({
                    prefix: hex"ff2001b8eb31136f2313c03bd375ee5a22cf7aa7eb2a8e94f7c32fe2e65300adc61fdb67069228cb78ab9bc66b17e85addc35863ba43738af2b6576491ed523016dbc229b37a5ef5f15de1d6a2d8927c97ddb1a42ba999f5e29e02",
                    path: hex"68f091b5a43bd1a841f091b590f096ad974fc2a52ff09291b0c2a5e2bfb9427bf3a08492e18dac2fe18ab3c2a53c",
                    value: hex"546b4ac900b71d90630ebd854bf9b4b3081054787817c34edbe248c019d3d522",
                    height: Height.Data({revision_number: 3060177628210535056, revision_height: 15891519861390755496}),
                    stateId: hex"ed80bee27e34a0880b2197ab1094fe480d5069a1bd49c0a1edde5f8ac47ae0db"
                })
            }),
            VerifyMembershipTestCase({
                message: hex"0000000000000000000000000000000000000000000000000000000000000020000100020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000140000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000e0598cc53099b2883a28cb4251429d3c7be499d830f9db75a73f6ca51ea98e580f000000000000000000000000000000000000000000000000f25593fbde8b3d9b000000000000000000000000000000000000000000000000001a61bd508161aa1237a766505d2856fc583afbf4e516a56a8d938e28a3ad80a48bdb2b0ff0fba30000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000de0a1aaf09f95b45c61333d6c5300000000000000000000000000000000000000",
                expected: LCPCommitment.VerifyMembershipProxyMessage({
                    prefix: hex"",
                    path: hex"e0a1aaf09f95b45c61333d6c53",
                    value: hex"598cc53099b2883a28cb4251429d3c7be499d830f9db75a73f6ca51ea98e580f",
                    height: Height.Data({revision_number: 17462025840178707867, revision_height: 7425815121846698}),
                    stateId: hex"1237a766505d2856fc583afbf4e516a56a8d938e28a3ad80a48bdb2b0ff0fba3"
                })
            }),
            VerifyMembershipTestCase({
                message: hex"0000000000000000000000000000000000000000000000000000000000000020000100020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000180000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000001200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000daa00bf6ff409e11000000000000000000000000000000000000000000000000d10de8755bbb966f872b34191770690dfab12766f81a675542e235e601fade02aaafef223f8c91320000000000000000000000000000000000000000000000000000000000000025af9969689d3af0ee38a30a1370d0006fd5eddf471a701a27bee843d2ecf6d88adf6f2f064f0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000017f091b6942fc381f09e8b9f272e4d5ed1a825603cc2a54b000000000000000000",
                expected: LCPCommitment.VerifyMembershipProxyMessage({
                    prefix: hex"af9969689d3af0ee38a30a1370d0006fd5eddf471a701a27bee843d2ecf6d88adf6f2f064f",
                    path: hex"f091b6942fc381f09e8b9f272e4d5ed1a825603cc2a54b",
                    value: hex"0000000000000000000000000000000000000000000000000000000000000000",
                    height: Height.Data({revision_number: 15753604652014280209, revision_height: 15063951919372015215}),
                    stateId: hex"872b34191770690dfab12766f81a675542e235e601fade02aaafef223f8c9132"
                })
            })
        ];
        for (uint256 i = 0; i < testCases.length; i++) {
            VerifyMembershipTestCase memory testCase = testCases[i];
            LCPCommitment.VerifyMembershipProxyMessage memory c =
                LCPCommitment.parseVerifyMembershipProxyMessage(testCase.message);
            assertEq(c.prefix, testCase.expected.prefix);
            assertEq(c.path, testCase.expected.path);
            assertEq(c.value, testCase.expected.value);
            assertEq(c.height.revision_number, testCase.expected.height.revision_number);
            assertEq(c.height.revision_height, testCase.expected.height.revision_height);
            assertEq(c.stateId, testCase.expected.stateId);
        }
    }

    function testMisbehaviourProxyMessage() public {
        MisbehaviourTestCase[3] memory testCases = [
            MisbehaviourTestCase({
                message: hexb0107b1904ba36090000000000000000000000000000000000000000000000009966df4e011b8935d590ab8202fb93921b18b396af38baf88b5c3781539cd31ccb1beedb83bba67f000000000000000000000000000000000000000000000000f04a90089275db8d0000000000000000000000000000000000000000000000007090215d100619f508a2eb71cc12ee1a51867f497db5a2d2f8ab81ac53b1aa5064a737a307413bad00000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000200001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000400000000000000006b002f339ccfacb440000000000000008223cef5ec5565bc5000000000000000304f392c2c632b18a0000000000000007b51eb886a61e3c9400000000000000000000000000000000000000000000000000000000000000890a29f0918a856224e0a88f6d6973d1a8f090a2afe0b08e5a202ef09d849625f0918caff09daa9df09f95b4125c1dd2c31456a250e3aea2e3c44a76e2ea80e12c89443f7d8dbcabb86b681ab901db00a02de186433a9809fd3b10b5f6392aac009dff0b9124255ee463ea9649edba666e0dba1d9373c21ebf1e654dcc7ff08192fd7b8c12ce6b9300710000000000000000000000000000000000000000000000",
                expected: LCPCommitment.MisbehaviourProxyMessage({
                    prevStates: newPrevStates(
                        LCPCommitment.PrevState({
                            height: Height.Data({revision_number: 12686775497686398473, revision_height: 11053767861546486069}),
                            stateId: hex"d590ab8202fb93921b18b396af38baf88b5c3781539cd31ccb1beedb83bba67f"
                        }),
                        LCPCommitment.PrevState({
                            height: Height.Data({revision_number: 17314810083870628749, revision_height: 8111019612478773749}),
                            stateId: hex"08a2eb71cc12ee1a51867f497db5a2d2f8ab81ac53b1aa5064a737a307413bad"
                        })
                        ),
                    context: hex"00000000000000000000000000000000000000000000000000000000000000200001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000400000000000000006b002f339ccfacb440000000000000008223cef5ec5565bc5000000000000000304f392c2c632b18a0000000000000007b51eb886a61e3c94",
                    clientMessage: hex"0a29f0918a856224e0a88f6d6973d1a8f090a2afe0b08e5a202ef09d849625f0918caff09daa9df09f95b4125c1dd2c31456a250e3aea2e3c44a76e2ea80e12c89443f7d8dbcabb86b681ab901db00a02de186433a9809fd3b10b5f6392aac009dff0b9124255ee463ea9649edba666e0dba1d9373c21ebf1e654dcc7ff08192fd7b8c12ce6b930071"
                })
            }),
            MisbehaviourTestCase({
                message: hexe00000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000e4cf781b016144bd000000000000000000000000000000000000000000000000adb3f36a542315859b23984cc845908a5f048a83d80df9a640d9ab0f3f3d956e121799e10b062d01000000000000000000000000000000000000000000000000bfcfdfc42995de400000000000000000000000000000000000000000000000000bce2fce1749fce953d9511691f0d0d6a73eeec55aaf1a953d9a5ca1b2a5191f66c02c2116449cb20000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000300a275838272260f096a3a35c5c6f4127797b2326e18ab24125f090a886f0908a8ff09d9396f091a8be1205f5a73dc68400000000000000000000000000000000",
                expected: LCPCommitment.MisbehaviourProxyMessage({
                    prevStates: newPrevStates(
                        LCPCommitment.PrevState({
                            height: Height.Data({revision_number: 16487528818209277117, revision_height: 12516615427396408709}),
                            stateId: hex"9b23984cc845908a5f048a83d80df9a640d9ab0f3f3d956e121799e10b062d01"
                        }),
                        LCPCommitment.PrevState({
                            height: Height.Data({revision_number: 13821511815027613248, revision_height: 850669941820095721}),
                            stateId: hex"53d9511691f0d0d6a73eeec55aaf1a953d9a5ca1b2a5191f66c02c2116449cb2"
                        })
                        ),
                    context: hex"0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000",
                    clientMessage: hex"0a275838272260f096a3a35c5c6f4127797b2326e18ab24125f090a886f0908a8ff09d9396f091a8be1205f5a73dc684"
                })
            }),
            MisbehaviourTestCase({
                message: hex"00000000000000000000000000000000000000000000000000000000000000200001000300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000e0000000000000000000000000000000000000000000000000000000000000018000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000009c474d96ed7ae6d800000000000000000000000000000000000000000000000034a207e0cdd3362b61826829caa438ca161204fb5f81b6e4c21243b253b4fc4bfe3e1d6a6ea05b240000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000250a11e0b48fc2a5e0b19de0b0b1217bf091b5a512106ca8f61681fe3b5af87ff0d94c6f3982000000000000000000000000000000000000000000000000000000",
                expected: LCPCommitment.MisbehaviourProxyMessage({
                    prevStates: newPrevStates(
                        LCPCommitment.PrevState({
                            height: Height.Data({revision_number: 11261054703887902424, revision_height: 3792602498306618923}),
                            stateId: hex"61826829caa438ca161204fb5f81b6e4c21243b253b4fc4bfe3e1d6a6ea05b24"
                        })
                        ),
                    context: hex"0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000",
                    clientMessage: hex"0a11e0b48fc2a5e0b19de0b0b1217bf091b5a512106ca8f61681fe3b5af87ff0d94c6f3982"
                })
            })
        ];
        for (uint256 i = 0; i < testCases.length; i++) {
            MisbehaviourTestCase memory testCase = testCases[i];
            LCPCommitment.MisbehaviourProxyMessage memory c =
                LCPCommitmentTestHelper.parseMisbehaviourProxyMessage(testCase.message);
            assertEq(c.prevStates.length, testCase.expected.prevStates.length);
            for (uint256 j = 0; j < c.prevStates.length; j++) {
                assertEq(c.prevStates[j].height.revision_number, testCase.expected.prevStates[j].height.revision_number);
                assertEq(c.prevStates[j].height.revision_height, testCase.expected.prevStates[j].height.revision_height);
                assertEq(c.prevStates[j].stateId, testCase.expected.prevStates[j].stateId);
            }
            assertEq(c.context, testCase.expected.context);
            assertEq(c.clientMessage, testCase.expected.clientMessage);
        }
    }
}
